---
- name: Combine no proxy list
  set_fact:
    cluster_no_proxy: "{{ cluster_proxy.noProxy | join(',') }}"
  when: cluster_proxy.noProxy is defined

- name: Set proxy env vars config file
  set_fact:
    proxy_env_config: |
      export http_proxy="{{ cluster_proxy.httpProxy|default('') }}"
      export https_proxy="{{ cluster_proxy.httpsProxy|default('') }}"
      export no_proxy="{{ cluster_no_proxy|default('localhost,127.0.0.1') }}"
      export HTTP_PROXY="{{ cluster_proxy.httpProxy|default('') }}"
      export HTTPS_PROXY="{{ cluster_proxy.httpsProxy|default('') }}"
      export NO_PROXY="{{ cluster_no_proxy|default('localhost,127.0.0.1') }}"

- name: Set proxy ic conf
  set_fact:
    proxy_ic_conf: "{\"httpProxy\": \"{{ cluster_proxy.httpProxy|default('') }}\", \"httpsProxy\": \"{{ cluster_proxy.httpsProxy|default('') }}\", \"noProxy\": \"{{ cluster_no_proxy|default('') }}\"}"

- name: Set ignition_config_overrides
  set_fact:
    ignition_config_override_files: "{{ ignition_config_override_files | default('') }}{{ ',' if ignition_config_override_files is defined and ignition_config_override_files != '' }}{{ '{\"path\": \"/etc/profile.d/proxy_env_vars.sh\", \"mode\": 420, \"overwrite\": true, \"user\": { \"name\": \"root\"},\"contents\": {\"source\": \"data:text/plain;base64,{{ proxy_env_config | b64encode }}\"}}' }}"

#- name: debug ignition_config_override_files
#  debug:
#    msg: "{{ ignition_config_override_files }}"

- name: Set body data
  set_fact:
    override_proxy_patch_body: "{ \"proxy\": { \"no_proxy\": \"{{ cluster_no_proxy|default('') }}\", \"http_proxy\": \"{{ cluster_proxy.httpProxy|default('') }}\", \"https_proxy\": \"{{ cluster_proxy.httpsProxy|default('') }}\"  } }"
    override_ic_body: "{ \"proxy\": {{ proxy_ic_conf | to_json }}  }"
    #override_proxy_body: "{ \"ignition_config_override\": '{{ ignition_config_override_bundle_string | to_json }}' }"

#- name: Inject extra Proxy Env Variables into the Discovery ISO
#  uri:
#    headers: "{{ compiled_uri_headers }}"
#    url: "{{ assisted_service_endpoint }}/infra-envs/{{ infraenv_id }}"
#    return_content: yes
#    method: PATCH
#    body:  "{{ override_proxy_body }}"
#    status_code: 201
#    body_format: json
#  register: additionalProxiesEnvVars_resp

#- name: d
#  debug:
#    msg: "{{ additionalProxiesEnvVars_resp }}"

- name: Inject Proxy config into the Cluster
  uri:
    headers: "{{ compiled_uri_headers }}"
    url: "{{ assisted_service_endpoint }}/clusters/{{ cluster_id }}"
    return_content: yes
    method: PATCH
    body:  '{{ override_proxy_patch_body }}'
    status_code: 201
    body_format: json
  register: proxyCluster_resp

- name: Inject Proxy config into the InfraEnv
  uri:
    headers: "{{ compiled_uri_headers }}"
    url: "{{ assisted_service_endpoint }}/infra-envs/{{ infraenv_id }}"
    return_content: yes
    method: PATCH
    body:  "{{ override_proxy_patch_body }}"
    status_code: 201
    body_format: json
  register: proxyInfraEnv_resp

- name: Inject the Proxy config into the install-config
  uri:
    headers: "{{ compiled_uri_headers }}"
    url: "{{ assisted_service_endpoint }}/clusters/{{ cluster_id }}/install-config"
    return_content: yes
    method: PATCH
    body:  '{{ override_ic_body | to_json }}'
    status_code: 201
    body_format: json
  register: proxyIC_resp

- name: Get the install-config
  uri:
    headers: "{{ compiled_uri_headers }}"
    url: "{{ assisted_service_endpoint }}/clusters/{{ cluster_id }}/install-config"
    return_content: yes
    method: GET
    status_code: 200
    body_format: json
  register: getproxyIC_resp