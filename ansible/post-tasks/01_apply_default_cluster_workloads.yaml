---
- name: Clone down repo source
  git:
    clone: yes
    update: yes
    force: yes
    repo: 'https://github.com/kenmoini/homelab.git'
    dest: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/homelab/"

- name: Run old fasioned oc CLI commands
  block:
  - name: Log into the cluster
    shell:
      cmd: "oc login {{ cluster_api_url }} --password=\"{{ cluster_kubeadmin_password }}\" --username=\"{{ cluster_kubeadmin_username }}\" --insecure-skip-tls-verify=true"
    no_log: true
    register: cluster_auth_status
    until: (cluster_auth_status.rc == 0)
    retries: 120
    delay: 20

    #community.okd.openshift_auth:
    #  username: "{{ cluster_kubeadmin_username }}"
    #  password: "{{ cluster_kubeadmin_password }}"
    #  host: "{{ cluster_api_url }}"
    #  validate_certs: false
    #register: openshift_auth_results

#  - name: Run Matrix Login script
#    shell:
#      cmd: "./run.sh"
#      chdir: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/homelab/openshift-quickstarts/cluster-init/matrix-login/"

  - name: Run NFS Registry Script
    shell:
      cmd: "./run.sh"
      chdir: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/homelab/openshift-quickstarts/cluster-init/nfs-registry/"
    environment:
      NFS_PATH: "/nfs/ocpreg/{{ cluster_name }}"

  - name: Run NFS StorageClass Script
    shell:
      cmd: "./run.sh"
      chdir: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/homelab/openshift-quickstarts/cluster-init/nfs-storageclass/"
    environment:
      NFS_PATH: "/nfs/ocp/{{ cluster_name }}"

#  - name: Deploy ACM
#    block:
#    - name: Create ACM Project
#      shell:
#        cmd: oc apply -f 01-project.yaml
#        chdir: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/homelab/openshift-quickstarts/cluster-init/acm-hub/"
#    - name: Create ACM OperatorGroup
#      shell:
#        cmd: oc apply -f 02-operatorgroup.yaml
#        chdir: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/homelab/openshift-quickstarts/cluster-init/acm-hub/"
#    - name: Create ACM Subscription
#      shell:
#        cmd: oc apply -f 03-subscription.yaml
#        chdir: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/homelab/openshift-quickstarts/cluster-init/acm-hub/"
#
#    - name: Check for ACM InstallPlan
#      shell:
#        cmd: oc get installplan $(oc get sub advanced-cluster-management -o jsonpath='{.status.installplan.name}' -n open-cluster-management) -o jsonpath='{.status.conditions[0].status}' -n open-cluster-management
#      register: acm_installplan_check
#      until: (acm_installplan_check.stdout == "True")
#      retries: 120
#      delay: 20
#
#    - name: Deploy MultiClusterHub
#      shell:
#        cmd: oc apply -f 04-multiclusterhub.yaml
#        chdir: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/homelab/openshift-quickstarts/cluster-init/acm-hub/"
#    when: cluster_name == "core-ocp"

  - name: Run LDAP IDP
    block:
    - name: Copy over CA Cert from defined path to the Git cloned repo
      copy:
        src: "{{ ldapCACertPath }}"
        dest: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/homelab/openshift-quickstarts/cluster-init/idp-ldap/cert.pem"

    - name: Run IdP LDAP Provisioner
      shell:
        cmd: "./run.sh {{ ldapBindPassword }}"
        chdir: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/homelab/openshift-quickstarts/cluster-init/idp-ldap/"
    when: ldapBindPassword is defined

  always:
  - name: Log out of the cluster
    shell:
      cmd: oc logout

  - name: Delete cloned repo
    file:
      state: absent
      path: "{{ generated_asset_directory }}/{{ cluster_id }}/tmp_checkout/"
  tags:
  - post_tasks_1
